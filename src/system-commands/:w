#include "asdf.h"

void addTime(int timeToAdd) {
    timeLeft += timeToAdd;
}

bool isInASDF() {
    return timeLeft > 0;
}

void* _runASDF(void* ptr) {
    int timeToAdd = *((int*)ptr);
}

void asdf(int timeToAdd) {
    if (isInASDF()) {
        addTime(timeToAdd);
        return;
    }

    pthread_t asdfThread;

    /* create a second thread which executes inc_x(&x) */
    if (pthread_create(&asdfThread, NULL, _runASDF, &timeToAdd)) {
    }

    system("setxkbmap us");

    pthread_mutex_lock(&timeMutex);
    timeLeft += timeToAdd;
    pthread_mutex_unlock(&timeMutex);

    while (true) {
        sleep(1);

        pthread_mutex_lock(&timeMutex);
        bool shouldBreak = --timeLeft <= 0;
        pthread_mutex_unlock(&timeMutex);

        if (shouldBreak) {
            break;
        }
    }

    system("setxkbmap us real-prog-dvorak");
}

bool isASDFCommand(char* ptr) {
    return strncmp(ptr, "!asdf", 5) == 0;
}
